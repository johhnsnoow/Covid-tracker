{"ast":null,"code":"var _jsxFileName = \"/home/johhsnoow/Desktop/covid-informatics/src/components/Charts/Charts.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Charts.module.css';\n\nconst Charts = (data, country) => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  });\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        fill: true,\n        backgroundColor: 'rgba(255,0,0,0.5)'\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }\n  }) : null;\n  const barChart = data.confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0,0,255,0.5)', 'rgba(0,255,0,0.5)', 'rgba(255,0,0,0.5)']\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, lineChart);\n};\n\nexport default Charts;","map":{"version":3,"sources":["/home/johhsnoow/Desktop/covid-informatics/src/components/Charts/Charts.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Charts","data","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","confirmed","label","borderColor","fill","deaths","backgroundColor","barChart","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,SAAQC,IAAR,EAAaC,GAAb,QAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AACA,MAAMC,MAAM,GAAG,CAACC,IAAD,EAAMC,OAAN,KAAkB;AAC7B,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BV,QAAQ,CAAC,EAAD,CAAzC;AAEAC,EAAAA,SAAS,CAAC,MACV;AACI,UAAMU,QAAQ,GAAG,YAAY;AACzBD,MAAAA,YAAY,CAAC,MAAMR,cAAc,EAArB,CAAZ;AACH,KAFD;;AAGAS,IAAAA,QAAQ;AACX,GANQ,CAAT;AAOA,QAAMC,SAAS,GACXH,SAAS,CAACI,MAAV,gBACC,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAACC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAYA,IAA1B,CAAT;AACZC,MAAAA,QAAQ,EAAE,CAAC;AACPV,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAc,CAAC;AAACG,UAAAA;AAAD,SAAD,KAAgBA,SAA9B,CADC;AAEPC,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAE,SAHN;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAKR;AACCd,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAc,CAAC;AAACO,UAAAA;AAAD,SAAD,KAAaA,MAA3B,CADP;AAECH,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,WAAW,EAAE,KAHd;AAICC,QAAAA,IAAI,EAAE,IAJP;AAKCE,QAAAA,eAAe,EAAE;AALlB,OALQ;AADE,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAeA,IAhBJ;AAiBA,QAAMC,QAAQ,GACVjB,IAAI,CAACW,SAAL,gBAEI,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE;AACNJ,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAY,WAAZ,EAAwB,QAAxB,CADF;AAENG,MAAAA,QAAQ,EAAE,CAAC;AACPE,QAAAA,KAAK,EAAC,QADC;AAEPI,QAAAA,eAAe,EAAE,CAAC,mBAAD,EAAqB,mBAArB,EAAyC,mBAAzC;AAFV,OAAD;AAFJ,KAAX;AAOA,IAAA,OAAO,EAAE;AACLE,MAAAA,MAAM,EAAE;AAACC,QAAAA,OAAO,EAAC;AAAT,OADH;AAELC,MAAAA,KAAK,EAAE;AAACD,QAAAA,OAAO,EAAC,IAAT;AAAcE,QAAAA,IAAI,EAAE,oBAAmBpB,OAAQ;AAA/C;AAFF,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,GAaI,IAdR;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACwB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,SADH,CADJ;AAKH,CAhDD;;AAkDA,eAAeN,MAAf","sourcesContent":["import React ,{ useState,useEffect} from 'react';\nimport {fetchDailyData} from '../../api'\nimport {Line,Bar} from 'react-chartjs-2';\nimport styles from './Charts.module.css';\nconst Charts = (data,country) => {\n    const [dailyData,setDailyData] = useState({});\n\n    useEffect(() => \n    {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n        fetchAPI();\n    })\n    const lineChart = (\n        dailyData.length ? (\n         <Line data={{labels: dailyData.map(({date}) => date),\n         datasets: [{\n             data: dailyData.map(({confirmed})=> confirmed),\n             label: 'Infected',\n             borderColor: '#3333ff',\n             fill: true,\n         },{\n            data: dailyData.map(({deaths})=> deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            fill: true,\n            backgroundColor: 'rgba(255,0,0,0.5)',\n         }],\n    }}/>\n    ) : null );\n    const barChart = (\n        data.confirmed \n        ? (\n            <Bar data={{\n                 labels: ['Infected','Recovered','Deaths'],\n                 datasets: [{\n                     label:'People',\n                     backgroundColor: ['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],\n                 }]\n            }}\n            options={{\n                legend: {display:false},\n                title: {display:true,text:`Current state in ${country}`},\n            }}/>\n        ) : null\n    )\n    return (\n        <div className={styles.container}>\n          {lineChart}\n        </div>\n    )\n}\n\nexport default Charts;"]},"metadata":{},"sourceType":"module"}