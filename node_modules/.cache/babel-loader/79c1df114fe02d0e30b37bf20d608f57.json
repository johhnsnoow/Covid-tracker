{"ast":null,"code":"var _jsxFileName = \"/home/johhsnoow/Desktop/covid-informatics/src/components/Charts/Charts.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Charts.module.css';\n\nconst Charts = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  }\n}, country) => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          data\n        }) => data.confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          data\n        }) => data.deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        fill: true,\n        backgroundColor: 'rgba(255,0,0,0.5)'\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }\n  }) : null;\n  console.log(confirmed, recovered, deaths);\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0,0,255,0.5)', 'rgba(0,255,0,0.5)', 'rgba(255,0,0,0.5)']\n      }],\n      data: [confirmed.value, recovered.value, deaths.value]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Charts;","map":{"version":3,"sources":["/home/johhsnoow/Desktop/covid-informatics/src/components/Charts/Charts.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Charts","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","console","log","barChart","value","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,SAAQC,IAAR,EAAaC,GAAb,QAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AACA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAC;AAACC,IAAAA,SAAD;AAAWC,IAAAA,SAAX;AAAqBC,IAAAA;AAArB;AAAN,CAAD,EAAqCC,OAArC,KAAiD;AAC5D,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2Bb,QAAQ,CAAC,EAAD,CAAzC;AAEAC,EAAAA,SAAS,CAAC,MACV;AACI,UAAMa,QAAQ,GAAG,YAAY;AACzBD,MAAAA,YAAY,CAAC,MAAMX,cAAc,EAArB,CAAZ;AACH,KAFD;;AAGAY,IAAAA,QAAQ;AACX,GANQ,EAMP,EANO,CAAT;AAOA,QAAMC,SAAS,GACXH,SAAS,CAACI,MAAV,gBACC,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAACC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAYA,IAA1B,CAAT;AACZC,MAAAA,QAAQ,EAAE,CAAC;AACPb,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAACX,UAAAA;AAAD,SAAD,KAAWA,IAAI,CAACC,SAA9B,CADC;AAEPa,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAE,SAHN;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAKR;AACChB,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAACX,UAAAA;AAAD,SAAD,KAAWA,IAAI,CAACG,MAA9B,CADP;AAECW,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,WAAW,EAAE,KAHd;AAICC,QAAAA,IAAI,EAAE,IAJP;AAKCC,QAAAA,eAAe,EAAE;AALlB,OALQ;AADE,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAeA,IAhBJ;AAiBAC,EAAAA,OAAO,CAACC,GAAR,CAAYlB,SAAZ,EAAsBC,SAAtB,EAAgCC,MAAhC;AACA,QAAMiB,QAAQ,GACVnB,SAAS,gBAEL,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE;AACNS,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAY,WAAZ,EAAwB,QAAxB,CADF;AAENG,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,KAAK,EAAC,QADC;AAEPG,QAAAA,eAAe,EAAE,CAAC,mBAAD,EAAqB,mBAArB,EAAyC,mBAAzC;AAFV,OAAD,CAFJ;AAMNjB,MAAAA,IAAI,EAAC,CAACC,SAAS,CAACoB,KAAX,EAAiBnB,SAAS,CAACmB,KAA3B,EAAiClB,MAAM,CAACkB,KAAxC;AANC,KAAX;AAQA,IAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE;AAACC,QAAAA,OAAO,EAAC;AAAT,OADH;AAELC,MAAAA,KAAK,EAAE;AAACD,QAAAA,OAAO,EAAC,IAAT;AAAcE,QAAAA,IAAI,EAAE,oBAAmBrB,OAAQ;AAA/C;AAFF,KART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFK,GAcL,IAfR;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAEN,MAAM,CAAC4B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,OAAO,GAAGgB,QAAH,GAAcZ,SADxB,CADJ;AAKH,CAlDD;;AAoDA,eAAeT,MAAf","sourcesContent":["import React ,{ useState,useEffect} from 'react';\nimport {fetchDailyData} from '../../api'\nimport {Line,Bar} from 'react-chartjs-2';\nimport styles from './Charts.module.css';\nconst Charts = ({data:{confirmed,recovered,deaths}},country) => {\n    const [dailyData,setDailyData] = useState({});\n\n    useEffect(() => \n    {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n        fetchAPI();\n    },[]);\n    const lineChart = (\n        dailyData.length ? (\n         <Line data={{labels: dailyData.map(({date}) => date),\n         datasets: [{\n             data: dailyData.map(({data})=> data.confirmed),\n             label: 'Infected',\n             borderColor: '#3333ff',\n             fill: true,\n         },{\n            data: dailyData.map(({data})=> data.deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            fill: true,\n            backgroundColor: 'rgba(255,0,0,0.5)',\n         }],\n    }}/>\n    ) : null );\n    console.log(confirmed,recovered,deaths);\n    const barChart = (\n        confirmed \n        ? (\n            <Bar data={{\n                 labels: ['Infected','Recovered','Deaths'],\n                 datasets: [{\n                     label:'People',\n                     backgroundColor: ['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],\n                 }],\n                 data:[confirmed.value,recovered.value,deaths.value]\n            }}\n            options={{\n                legend: {display:false},\n                title: {display:true,text:`Current state in ${country}`},\n            }}/>\n        ) : null\n    )\n    return (\n        <div className={styles.container}>\n          {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Charts;"]},"metadata":{},"sourceType":"module"}